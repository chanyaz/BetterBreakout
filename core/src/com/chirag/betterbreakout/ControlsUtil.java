package com.chirag.betterbreakout;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Input;

import java.util.ArrayList;

public class ControlsUtil {
    private static int deviceType = 0; //0 = desktop 1 = mobile
    static int direction = 0; //-1 = left 0 = nothing 1 = right

    static void setDeviceType(int type) {
        deviceType = type;
    }

    static boolean leftPressed() {
        return Gdx.input.isKeyPressed(Input.Keys.LEFT) || Gdx.input.isKeyPressed(Input.Keys.A);
    }

    static boolean rightPressed() {
        return Gdx.input.isKeyPressed(Input.Keys.RIGHT) || Gdx.input.isKeyPressed(Input.Keys.D);
    }

    public static void update() {
        if(deviceType == 0) {
            if(leftPressed() && !rightPressed()) {
                direction = -1;
            } else if(rightPressed() && !leftPressed()) {
                direction = 1;
            } else {
                direction = 0;
            }
        } else {
            if(Gdx.input.isTouched()) {
                ArrayList<Integer> activePointers = new ArrayList<Integer>();
                for(int i = 0;i < 20;i ++) {
                    if(Gdx.input.isTouched(i)) {
                        activePointers.add(i);
                    }
                }
                int netTouch = 0;
                for(int i : activePointers) {
                    int x = Gdx.input.getX(i);
                    if(x < BetterBreakout.GAME_WIDTH / 3) {
                        netTouch--;
                    } else if(x > BetterBreakout.GAME_WIDTH / 1.5) {
                        netTouch++;
                    }
                }
                direction = (netTouch == 0) ? netTouch : ((netTouch > 0) ? 1 : -1);
            } else {
                direction = 0;
            }
        }
    }
}






































































































































































































































































































































































































































































































































































































































































































































































































































































































































































